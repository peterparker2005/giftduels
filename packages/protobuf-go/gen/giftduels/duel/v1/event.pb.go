// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: giftduels/duel/v1/event.proto

package duelv1

import (
	v1 "github.com/peterparker2005/giftduels/packages/protobuf-go/gen/giftduels/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DuelEvent struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	DuelId string                 `protobuf:"bytes,1,opt,name=duel_id,json=duelId,proto3" json:"duel_id,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*DuelEvent_Created
	//	*DuelEvent_Joined
	//	*DuelEvent_RoundStarted
	//	*DuelEvent_RollResult
	//	*DuelEvent_RoundTied
	//	*DuelEvent_Finished
	//	*DuelEvent_Timeout
	//	*DuelEvent_Started
	Payload       isDuelEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelEvent) Reset() {
	*x = DuelEvent{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelEvent) ProtoMessage() {}

func (x *DuelEvent) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelEvent.ProtoReflect.Descriptor instead.
func (*DuelEvent) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *DuelEvent) GetDuelId() string {
	if x != nil {
		return x.DuelId
	}
	return ""
}

func (x *DuelEvent) GetPayload() isDuelEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *DuelEvent) GetCreated() *DuelCreated {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_Created); ok {
			return x.Created
		}
	}
	return nil
}

func (x *DuelEvent) GetJoined() *DuelJoined {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_Joined); ok {
			return x.Joined
		}
	}
	return nil
}

func (x *DuelEvent) GetRoundStarted() *RoundStarted {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_RoundStarted); ok {
			return x.RoundStarted
		}
	}
	return nil
}

func (x *DuelEvent) GetRollResult() *RollResult {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_RollResult); ok {
			return x.RollResult
		}
	}
	return nil
}

func (x *DuelEvent) GetRoundTied() *RoundTied {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_RoundTied); ok {
			return x.RoundTied
		}
	}
	return nil
}

func (x *DuelEvent) GetFinished() *DuelFinished {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_Finished); ok {
			return x.Finished
		}
	}
	return nil
}

func (x *DuelEvent) GetTimeout() *AutoRollTimeout {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_Timeout); ok {
			return x.Timeout
		}
	}
	return nil
}

func (x *DuelEvent) GetStarted() *DuelStarted {
	if x != nil {
		if x, ok := x.Payload.(*DuelEvent_Started); ok {
			return x.Started
		}
	}
	return nil
}

type isDuelEvent_Payload interface {
	isDuelEvent_Payload()
}

type DuelEvent_Created struct {
	Created *DuelCreated `protobuf:"bytes,2,opt,name=created,proto3,oneof"`
}

type DuelEvent_Joined struct {
	Joined *DuelJoined `protobuf:"bytes,3,opt,name=joined,proto3,oneof"`
}

type DuelEvent_RoundStarted struct {
	RoundStarted *RoundStarted `protobuf:"bytes,4,opt,name=round_started,json=roundStarted,proto3,oneof"`
}

type DuelEvent_RollResult struct {
	RollResult *RollResult `protobuf:"bytes,5,opt,name=roll_result,json=rollResult,proto3,oneof"`
}

type DuelEvent_RoundTied struct {
	RoundTied *RoundTied `protobuf:"bytes,6,opt,name=round_tied,json=roundTied,proto3,oneof"`
}

type DuelEvent_Finished struct {
	Finished *DuelFinished `protobuf:"bytes,7,opt,name=finished,proto3,oneof"`
}

type DuelEvent_Timeout struct {
	Timeout *AutoRollTimeout `protobuf:"bytes,8,opt,name=timeout,proto3,oneof"`
}

type DuelEvent_Started struct {
	Started *DuelStarted `protobuf:"bytes,9,opt,name=started,proto3,oneof"`
}

func (*DuelEvent_Created) isDuelEvent_Payload() {}

func (*DuelEvent_Joined) isDuelEvent_Payload() {}

func (*DuelEvent_RoundStarted) isDuelEvent_Payload() {}

func (*DuelEvent_RollResult) isDuelEvent_Payload() {}

func (*DuelEvent_RoundTied) isDuelEvent_Payload() {}

func (*DuelEvent_Finished) isDuelEvent_Payload() {}

func (*DuelEvent_Timeout) isDuelEvent_Payload() {}

func (*DuelEvent_Started) isDuelEvent_Payload() {}

type DuelCreated struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CreatorTelegramUserId *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=creator_telegram_user_id,json=creatorTelegramUserId,proto3" json:"creator_telegram_user_id,omitempty"`
	At                    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DuelCreated) Reset() {
	*x = DuelCreated{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelCreated) ProtoMessage() {}

func (x *DuelCreated) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelCreated.ProtoReflect.Descriptor instead.
func (*DuelCreated) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *DuelCreated) GetCreatorTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.CreatorTelegramUserId
	}
	return nil
}

func (x *DuelCreated) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type DuelJoined struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	OpponentTelegramUserId *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=opponent_telegram_user_id,json=opponentTelegramUserId,proto3" json:"opponent_telegram_user_id,omitempty"`
	At                     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DuelJoined) Reset() {
	*x = DuelJoined{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelJoined) ProtoMessage() {}

func (x *DuelJoined) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelJoined.ProtoReflect.Descriptor instead.
func (*DuelJoined) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *DuelJoined) GetOpponentTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.OpponentTelegramUserId
	}
	return nil
}

func (x *DuelJoined) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type RoundStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundNumber   int32                  `protobuf:"varint,1,opt,name=round_number,json=roundNumber,proto3" json:"round_number,omitempty"`
	At            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoundStarted) Reset() {
	*x = RoundStarted{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoundStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundStarted) ProtoMessage() {}

func (x *RoundStarted) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundStarted.ProtoReflect.Descriptor instead.
func (*RoundStarted) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *RoundStarted) GetRoundNumber() int32 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *RoundStarted) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type RollResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TelegramUserId *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"`
	Value          int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Manual         bool                   `protobuf:"varint,3,opt,name=manual,proto3" json:"manual,omitempty"`
	At             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RollResult) Reset() {
	*x = RollResult{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollResult) ProtoMessage() {}

func (x *RollResult) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollResult.ProtoReflect.Descriptor instead.
func (*RollResult) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *RollResult) GetTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.TelegramUserId
	}
	return nil
}

func (x *RollResult) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RollResult) GetManual() bool {
	if x != nil {
		return x.Manual
	}
	return false
}

func (x *RollResult) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type RoundTied struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundNumber   int32                  `protobuf:"varint,1,opt,name=round_number,json=roundNumber,proto3" json:"round_number,omitempty"` // если выпало равное значение
	At            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoundTied) Reset() {
	*x = RoundTied{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoundTied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundTied) ProtoMessage() {}

func (x *RoundTied) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundTied.ProtoReflect.Descriptor instead.
func (*RoundTied) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *RoundTied) GetRoundNumber() int32 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *RoundTied) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type AutoRollTimeout struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TelegramUserId *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"` // у кого истёк таймаут
	At             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AutoRollTimeout) Reset() {
	*x = AutoRollTimeout{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoRollTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoRollTimeout) ProtoMessage() {}

func (x *AutoRollTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoRollTimeout.ProtoReflect.Descriptor instead.
func (*AutoRollTimeout) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *AutoRollTimeout) GetTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.TelegramUserId
	}
	return nil
}

func (x *AutoRollTimeout) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type DuelStarted struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CreatorTelegramUserId  *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=creator_telegram_user_id,json=creatorTelegramUserId,proto3" json:"creator_telegram_user_id,omitempty"`
	OpponentTelegramUserId *v1.TelegramUserId     `protobuf:"bytes,2,opt,name=opponent_telegram_user_id,json=opponentTelegramUserId,proto3" json:"opponent_telegram_user_id,omitempty"`
	At                     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DuelStarted) Reset() {
	*x = DuelStarted{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelStarted) ProtoMessage() {}

func (x *DuelStarted) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelStarted.ProtoReflect.Descriptor instead.
func (*DuelStarted) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{7}
}

func (x *DuelStarted) GetCreatorTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.CreatorTelegramUserId
	}
	return nil
}

func (x *DuelStarted) GetOpponentTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.OpponentTelegramUserId
	}
	return nil
}

func (x *DuelStarted) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

type DuelFinished struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	WinnerTelegramUserId *v1.TelegramUserId     `protobuf:"bytes,1,opt,name=winner_telegram_user_id,json=winnerTelegramUserId,proto3" json:"winner_telegram_user_id,omitempty"`
	AllRolls             []*DiceRoll            `protobuf:"bytes,2,rep,name=all_rolls,json=allRolls,proto3" json:"all_rolls,omitempty"`
	At                   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=at,proto3" json:"at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DuelFinished) Reset() {
	*x = DuelFinished{}
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelFinished) ProtoMessage() {}

func (x *DuelFinished) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelFinished.ProtoReflect.Descriptor instead.
func (*DuelFinished) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_event_proto_rawDescGZIP(), []int{8}
}

func (x *DuelFinished) GetWinnerTelegramUserId() *v1.TelegramUserId {
	if x != nil {
		return x.WinnerTelegramUserId
	}
	return nil
}

func (x *DuelFinished) GetAllRolls() []*DiceRoll {
	if x != nil {
		return x.AllRolls
	}
	return nil
}

func (x *DuelFinished) GetAt() *timestamppb.Timestamp {
	if x != nil {
		return x.At
	}
	return nil
}

var File_giftduels_duel_v1_event_proto protoreflect.FileDescriptor

const file_giftduels_duel_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x1dgiftduels/duel/v1/event.proto\x12\x11giftduels.duel.v1\x1a\x1cgiftduels/duel/v1/duel.proto\x1a giftduels/shared/v1/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa8\x04\n" +
	"\tDuelEvent\x12\x17\n" +
	"\aduel_id\x18\x01 \x01(\tR\x06duelId\x12:\n" +
	"\acreated\x18\x02 \x01(\v2\x1e.giftduels.duel.v1.DuelCreatedH\x00R\acreated\x127\n" +
	"\x06joined\x18\x03 \x01(\v2\x1d.giftduels.duel.v1.DuelJoinedH\x00R\x06joined\x12F\n" +
	"\rround_started\x18\x04 \x01(\v2\x1f.giftduels.duel.v1.RoundStartedH\x00R\froundStarted\x12@\n" +
	"\vroll_result\x18\x05 \x01(\v2\x1d.giftduels.duel.v1.RollResultH\x00R\n" +
	"rollResult\x12=\n" +
	"\n" +
	"round_tied\x18\x06 \x01(\v2\x1c.giftduels.duel.v1.RoundTiedH\x00R\troundTied\x12=\n" +
	"\bfinished\x18\a \x01(\v2\x1f.giftduels.duel.v1.DuelFinishedH\x00R\bfinished\x12>\n" +
	"\atimeout\x18\b \x01(\v2\".giftduels.duel.v1.AutoRollTimeoutH\x00R\atimeout\x12:\n" +
	"\astarted\x18\t \x01(\v2\x1e.giftduels.duel.v1.DuelStartedH\x00R\astartedB\t\n" +
	"\apayload\"\x97\x01\n" +
	"\vDuelCreated\x12\\\n" +
	"\x18creator_telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x15creatorTelegramUserId\x12*\n" +
	"\x02at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"\x98\x01\n" +
	"\n" +
	"DuelJoined\x12^\n" +
	"\x19opponent_telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x16opponentTelegramUserId\x12*\n" +
	"\x02at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"]\n" +
	"\fRoundStarted\x12!\n" +
	"\fround_number\x18\x01 \x01(\x05R\vroundNumber\x12*\n" +
	"\x02at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"\xb5\x01\n" +
	"\n" +
	"RollResult\x12M\n" +
	"\x10telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x0etelegramUserId\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x16\n" +
	"\x06manual\x18\x03 \x01(\bR\x06manual\x12*\n" +
	"\x02at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"Z\n" +
	"\tRoundTied\x12!\n" +
	"\fround_number\x18\x01 \x01(\x05R\vroundNumber\x12*\n" +
	"\x02at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"\x8c\x01\n" +
	"\x0fAutoRollTimeout\x12M\n" +
	"\x10telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x0etelegramUserId\x12*\n" +
	"\x02at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"\xf7\x01\n" +
	"\vDuelStarted\x12\\\n" +
	"\x18creator_telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x15creatorTelegramUserId\x12^\n" +
	"\x19opponent_telegram_user_id\x18\x02 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x16opponentTelegramUserId\x12*\n" +
	"\x02at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02at\"\xd0\x01\n" +
	"\fDuelFinished\x12Z\n" +
	"\x17winner_telegram_user_id\x18\x01 \x01(\v2#.giftduels.shared.v1.TelegramUserIdR\x14winnerTelegramUserId\x128\n" +
	"\tall_rolls\x18\x02 \x03(\v2\x1b.giftduels.duel.v1.DiceRollR\ballRolls\x12*\n" +
	"\x02at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02atBXZVgithub.com/peterparker2005/giftduels/packages/protobuf-go/gen/giftduels/duel/v1;duelv1b\x06proto3"

var (
	file_giftduels_duel_v1_event_proto_rawDescOnce sync.Once
	file_giftduels_duel_v1_event_proto_rawDescData []byte
)

func file_giftduels_duel_v1_event_proto_rawDescGZIP() []byte {
	file_giftduels_duel_v1_event_proto_rawDescOnce.Do(func() {
		file_giftduels_duel_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_giftduels_duel_v1_event_proto_rawDesc), len(file_giftduels_duel_v1_event_proto_rawDesc)))
	})
	return file_giftduels_duel_v1_event_proto_rawDescData
}

var file_giftduels_duel_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_giftduels_duel_v1_event_proto_goTypes = []any{
	(*DuelEvent)(nil),             // 0: giftduels.duel.v1.DuelEvent
	(*DuelCreated)(nil),           // 1: giftduels.duel.v1.DuelCreated
	(*DuelJoined)(nil),            // 2: giftduels.duel.v1.DuelJoined
	(*RoundStarted)(nil),          // 3: giftduels.duel.v1.RoundStarted
	(*RollResult)(nil),            // 4: giftduels.duel.v1.RollResult
	(*RoundTied)(nil),             // 5: giftduels.duel.v1.RoundTied
	(*AutoRollTimeout)(nil),       // 6: giftduels.duel.v1.AutoRollTimeout
	(*DuelStarted)(nil),           // 7: giftduels.duel.v1.DuelStarted
	(*DuelFinished)(nil),          // 8: giftduels.duel.v1.DuelFinished
	(*v1.TelegramUserId)(nil),     // 9: giftduels.shared.v1.TelegramUserId
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*DiceRoll)(nil),              // 11: giftduels.duel.v1.DiceRoll
}
var file_giftduels_duel_v1_event_proto_depIdxs = []int32{
	1,  // 0: giftduels.duel.v1.DuelEvent.created:type_name -> giftduels.duel.v1.DuelCreated
	2,  // 1: giftduels.duel.v1.DuelEvent.joined:type_name -> giftduels.duel.v1.DuelJoined
	3,  // 2: giftduels.duel.v1.DuelEvent.round_started:type_name -> giftduels.duel.v1.RoundStarted
	4,  // 3: giftduels.duel.v1.DuelEvent.roll_result:type_name -> giftduels.duel.v1.RollResult
	5,  // 4: giftduels.duel.v1.DuelEvent.round_tied:type_name -> giftduels.duel.v1.RoundTied
	8,  // 5: giftduels.duel.v1.DuelEvent.finished:type_name -> giftduels.duel.v1.DuelFinished
	6,  // 6: giftduels.duel.v1.DuelEvent.timeout:type_name -> giftduels.duel.v1.AutoRollTimeout
	7,  // 7: giftduels.duel.v1.DuelEvent.started:type_name -> giftduels.duel.v1.DuelStarted
	9,  // 8: giftduels.duel.v1.DuelCreated.creator_telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	10, // 9: giftduels.duel.v1.DuelCreated.at:type_name -> google.protobuf.Timestamp
	9,  // 10: giftduels.duel.v1.DuelJoined.opponent_telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	10, // 11: giftduels.duel.v1.DuelJoined.at:type_name -> google.protobuf.Timestamp
	10, // 12: giftduels.duel.v1.RoundStarted.at:type_name -> google.protobuf.Timestamp
	9,  // 13: giftduels.duel.v1.RollResult.telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	10, // 14: giftduels.duel.v1.RollResult.at:type_name -> google.protobuf.Timestamp
	10, // 15: giftduels.duel.v1.RoundTied.at:type_name -> google.protobuf.Timestamp
	9,  // 16: giftduels.duel.v1.AutoRollTimeout.telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	10, // 17: giftduels.duel.v1.AutoRollTimeout.at:type_name -> google.protobuf.Timestamp
	9,  // 18: giftduels.duel.v1.DuelStarted.creator_telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	9,  // 19: giftduels.duel.v1.DuelStarted.opponent_telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	10, // 20: giftduels.duel.v1.DuelStarted.at:type_name -> google.protobuf.Timestamp
	9,  // 21: giftduels.duel.v1.DuelFinished.winner_telegram_user_id:type_name -> giftduels.shared.v1.TelegramUserId
	11, // 22: giftduels.duel.v1.DuelFinished.all_rolls:type_name -> giftduels.duel.v1.DiceRoll
	10, // 23: giftduels.duel.v1.DuelFinished.at:type_name -> google.protobuf.Timestamp
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_giftduels_duel_v1_event_proto_init() }
func file_giftduels_duel_v1_event_proto_init() {
	if File_giftduels_duel_v1_event_proto != nil {
		return
	}
	file_giftduels_duel_v1_duel_proto_init()
	file_giftduels_duel_v1_event_proto_msgTypes[0].OneofWrappers = []any{
		(*DuelEvent_Created)(nil),
		(*DuelEvent_Joined)(nil),
		(*DuelEvent_RoundStarted)(nil),
		(*DuelEvent_RollResult)(nil),
		(*DuelEvent_RoundTied)(nil),
		(*DuelEvent_Finished)(nil),
		(*DuelEvent_Timeout)(nil),
		(*DuelEvent_Started)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_giftduels_duel_v1_event_proto_rawDesc), len(file_giftduels_duel_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_giftduels_duel_v1_event_proto_goTypes,
		DependencyIndexes: file_giftduels_duel_v1_event_proto_depIdxs,
		MessageInfos:      file_giftduels_duel_v1_event_proto_msgTypes,
	}.Build()
	File_giftduels_duel_v1_event_proto = out.File
	file_giftduels_duel_v1_event_proto_goTypes = nil
	file_giftduels_duel_v1_event_proto_depIdxs = nil
}
