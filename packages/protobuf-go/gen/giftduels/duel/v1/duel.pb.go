// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: giftduels/duel/v1/duel.proto

package duelv1

import (
	v11 "github.com/peterparker2005/giftduels/packages/protobuf-go/gen/giftduels/gift/v1"
	v1 "github.com/peterparker2005/giftduels/packages/protobuf-go/gen/giftduels/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoundStatus int32

const (
	RoundStatus_ROUND_STATUS_UNSPECIFIED       RoundStatus = 0
	RoundStatus_ROUND_STATUS_WAITING_FOR_ROLLS RoundStatus = 1
	RoundStatus_ROUND_STATUS_COMPLETED         RoundStatus = 2
	RoundStatus_ROUND_STATUS_TIED              RoundStatus = 3
)

// Enum value maps for RoundStatus.
var (
	RoundStatus_name = map[int32]string{
		0: "ROUND_STATUS_UNSPECIFIED",
		1: "ROUND_STATUS_WAITING_FOR_ROLLS",
		2: "ROUND_STATUS_COMPLETED",
		3: "ROUND_STATUS_TIED",
	}
	RoundStatus_value = map[string]int32{
		"ROUND_STATUS_UNSPECIFIED":       0,
		"ROUND_STATUS_WAITING_FOR_ROLLS": 1,
		"ROUND_STATUS_COMPLETED":         2,
		"ROUND_STATUS_TIED":              3,
	}
)

func (x RoundStatus) Enum() *RoundStatus {
	p := new(RoundStatus)
	*p = x
	return p
}

func (x RoundStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoundStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_giftduels_duel_v1_duel_proto_enumTypes[0].Descriptor()
}

func (RoundStatus) Type() protoreflect.EnumType {
	return &file_giftduels_duel_v1_duel_proto_enumTypes[0]
}

func (x RoundStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoundStatus.Descriptor instead.
func (RoundStatus) EnumDescriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{0}
}

type ParticipantStatus int32

const (
	ParticipantStatus_PARTICIPANT_STATUS_UNSPECIFIED  ParticipantStatus = 0
	ParticipantStatus_PARTICIPANT_STATUS_JOINED       ParticipantStatus = 1
	ParticipantStatus_PARTICIPANT_STATUS_READY        ParticipantStatus = 2
	ParticipantStatus_PARTICIPANT_STATUS_ACTIVE       ParticipantStatus = 3
	ParticipantStatus_PARTICIPANT_STATUS_DISCONNECTED ParticipantStatus = 4
)

// Enum value maps for ParticipantStatus.
var (
	ParticipantStatus_name = map[int32]string{
		0: "PARTICIPANT_STATUS_UNSPECIFIED",
		1: "PARTICIPANT_STATUS_JOINED",
		2: "PARTICIPANT_STATUS_READY",
		3: "PARTICIPANT_STATUS_ACTIVE",
		4: "PARTICIPANT_STATUS_DISCONNECTED",
	}
	ParticipantStatus_value = map[string]int32{
		"PARTICIPANT_STATUS_UNSPECIFIED":  0,
		"PARTICIPANT_STATUS_JOINED":       1,
		"PARTICIPANT_STATUS_READY":        2,
		"PARTICIPANT_STATUS_ACTIVE":       3,
		"PARTICIPANT_STATUS_DISCONNECTED": 4,
	}
)

func (x ParticipantStatus) Enum() *ParticipantStatus {
	p := new(ParticipantStatus)
	*p = x
	return p
}

func (x ParticipantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_giftduels_duel_v1_duel_proto_enumTypes[1].Descriptor()
}

func (ParticipantStatus) Type() protoreflect.EnumType {
	return &file_giftduels_duel_v1_duel_proto_enumTypes[1]
}

func (x ParticipantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantStatus.Descriptor instead.
func (ParticipantStatus) EnumDescriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{1}
}

type DuelSortField int32

const (
	DuelSortField_DUEL_SORT_FIELD_UNSPECIFIED  DuelSortField = 0
	DuelSortField_DUEL_SORT_FIELD_CREATED_AT   DuelSortField = 1
	DuelSortField_DUEL_SORT_FIELD_TOTAL_VALUE  DuelSortField = 2
	DuelSortField_DUEL_SORT_FIELD_COMPLETED_AT DuelSortField = 3
)

// Enum value maps for DuelSortField.
var (
	DuelSortField_name = map[int32]string{
		0: "DUEL_SORT_FIELD_UNSPECIFIED",
		1: "DUEL_SORT_FIELD_CREATED_AT",
		2: "DUEL_SORT_FIELD_TOTAL_VALUE",
		3: "DUEL_SORT_FIELD_COMPLETED_AT",
	}
	DuelSortField_value = map[string]int32{
		"DUEL_SORT_FIELD_UNSPECIFIED":  0,
		"DUEL_SORT_FIELD_CREATED_AT":   1,
		"DUEL_SORT_FIELD_TOTAL_VALUE":  2,
		"DUEL_SORT_FIELD_COMPLETED_AT": 3,
	}
)

func (x DuelSortField) Enum() *DuelSortField {
	p := new(DuelSortField)
	*p = x
	return p
}

func (x DuelSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DuelSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_giftduels_duel_v1_duel_proto_enumTypes[2].Descriptor()
}

func (DuelSortField) Type() protoreflect.EnumType {
	return &file_giftduels_duel_v1_duel_proto_enumTypes[2]
}

func (x DuelSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DuelSortField.Descriptor instead.
func (DuelSortField) EnumDescriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{2}
}

type GameStatus int32

const (
	GameStatus_GAME_STATUS_UNSPECIFIED GameStatus = 0
	GameStatus_GAME_STATUS_OPEN        GameStatus = 1
	GameStatus_GAME_STATUS_IN_PROGRESS GameStatus = 2
	GameStatus_GAME_STATUS_FINISHED    GameStatus = 3
	GameStatus_GAME_STATUS_CANCELLED   GameStatus = 4
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "GAME_STATUS_UNSPECIFIED",
		1: "GAME_STATUS_OPEN",
		2: "GAME_STATUS_IN_PROGRESS",
		3: "GAME_STATUS_FINISHED",
		4: "GAME_STATUS_CANCELLED",
	}
	GameStatus_value = map[string]int32{
		"GAME_STATUS_UNSPECIFIED": 0,
		"GAME_STATUS_OPEN":        1,
		"GAME_STATUS_IN_PROGRESS": 2,
		"GAME_STATUS_FINISHED":    3,
		"GAME_STATUS_CANCELLED":   4,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_giftduels_duel_v1_duel_proto_enumTypes[3].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_giftduels_duel_v1_duel_proto_enumTypes[3]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{3}
}

type DuelParams struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InviteOnly      bool                   `protobuf:"varint,1,opt,name=invite_only,json=inviteOnly,proto3" json:"invite_only,omitempty"`
	AutoRollTimeout *durationpb.Duration   `protobuf:"bytes,2,opt,name=auto_roll_timeout,json=autoRollTimeout,proto3" json:"auto_roll_timeout,omitempty"`
	MaxRounds       uint32                 `protobuf:"varint,3,opt,name=max_rounds,json=maxRounds,proto3" json:"max_rounds,omitempty"` // Maximum rounds before draw
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DuelParams) Reset() {
	*x = DuelParams{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelParams) ProtoMessage() {}

func (x *DuelParams) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelParams.ProtoReflect.Descriptor instead.
func (*DuelParams) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{0}
}

func (x *DuelParams) GetInviteOnly() bool {
	if x != nil {
		return x.InviteOnly
	}
	return false
}

func (x *DuelParams) GetAutoRollTimeout() *durationpb.Duration {
	if x != nil {
		return x.AutoRollTimeout
	}
	return nil
}

func (x *DuelParams) GetMaxRounds() uint32 {
	if x != nil {
		return x.MaxRounds
	}
	return 0
}

type DuelInviteParams struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InviteOnly      bool                   `protobuf:"varint,1,opt,name=invite_only,json=inviteOnly,proto3" json:"invite_only,omitempty"`
	AutoRollTimeout *durationpb.Duration   `protobuf:"bytes,2,opt,name=auto_roll_timeout,json=autoRollTimeout,proto3" json:"auto_roll_timeout,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DuelInviteParams) Reset() {
	*x = DuelInviteParams{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelInviteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelInviteParams) ProtoMessage() {}

func (x *DuelInviteParams) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelInviteParams.ProtoReflect.Descriptor instead.
func (*DuelInviteParams) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{1}
}

func (x *DuelInviteParams) GetInviteOnly() bool {
	if x != nil {
		return x.InviteOnly
	}
	return false
}

func (x *DuelInviteParams) GetAutoRollTimeout() *durationpb.Duration {
	if x != nil {
		return x.AutoRollTimeout
	}
	return nil
}

type DiceRoll struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TelegramUserId int64                  `protobuf:"varint,1,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"`
	RoundNumber    int32                  `protobuf:"varint,2,opt,name=round_number,json=roundNumber,proto3" json:"round_number,omitempty"`
	Value          int32                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`                       // 1-6
	IsManual       bool                   `protobuf:"varint,4,opt,name=is_manual,json=isManual,proto3" json:"is_manual,omitempty"` // true if manually rolled, false if auto-rolled
	RolledAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=rolled_at,json=rolledAt,proto3" json:"rolled_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiceRoll) Reset() {
	*x = DiceRoll{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiceRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceRoll) ProtoMessage() {}

func (x *DiceRoll) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceRoll.ProtoReflect.Descriptor instead.
func (*DiceRoll) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{2}
}

func (x *DiceRoll) GetTelegramUserId() int64 {
	if x != nil {
		return x.TelegramUserId
	}
	return 0
}

func (x *DiceRoll) GetRoundNumber() int32 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *DiceRoll) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DiceRoll) GetIsManual() bool {
	if x != nil {
		return x.IsManual
	}
	return false
}

func (x *DiceRoll) GetRolledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RolledAt
	}
	return nil
}

type RoundInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundNumber   int32                  `protobuf:"varint,1,opt,name=round_number,json=roundNumber,proto3" json:"round_number,omitempty"`
	Rolls         map[string]*DiceRoll   `protobuf:"bytes,2,rep,name=rolls,proto3" json:"rolls,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key: user_id, value: roll
	Status        RoundStatus            `protobuf:"varint,3,opt,name=status,proto3,enum=giftduels.duel.v1.RoundStatus" json:"status,omitempty"`
	WinnerUserId  int64                  `protobuf:"varint,4,opt,name=winner_user_id,json=winnerUserId,proto3" json:"winner_user_id,omitempty"` // Set if round has winner
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoundInfo) Reset() {
	*x = RoundInfo{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundInfo) ProtoMessage() {}

func (x *RoundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundInfo.ProtoReflect.Descriptor instead.
func (*RoundInfo) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{3}
}

func (x *RoundInfo) GetRoundNumber() int32 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *RoundInfo) GetRolls() map[string]*DiceRoll {
	if x != nil {
		return x.Rolls
	}
	return nil
}

func (x *RoundInfo) GetStatus() RoundStatus {
	if x != nil {
		return x.Status
	}
	return RoundStatus_ROUND_STATUS_UNSPECIFIED
}

func (x *RoundInfo) GetWinnerUserId() int64 {
	if x != nil {
		return x.WinnerUserId
	}
	return 0
}

type DuelParticipant struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TelegramUserId  int64                  `protobuf:"varint,1,opt,name=telegram_user_id,json=telegramUserId,proto3" json:"telegram_user_id,omitempty"`
	UserInfo        *v1.UserDisplayInfo    `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	IsCreator       bool                   `protobuf:"varint,3,opt,name=is_creator,json=isCreator,proto3" json:"is_creator,omitempty"`
	Stakes          []*DuelStakeItem       `protobuf:"bytes,4,rep,name=stakes,proto3" json:"stakes,omitempty"`
	TotalStakeValue *v1.TonAmount          `protobuf:"bytes,5,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"`
	Status          ParticipantStatus      `protobuf:"varint,6,opt,name=status,proto3,enum=giftduels.duel.v1.ParticipantStatus" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DuelParticipant) Reset() {
	*x = DuelParticipant{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelParticipant) ProtoMessage() {}

func (x *DuelParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelParticipant.ProtoReflect.Descriptor instead.
func (*DuelParticipant) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{4}
}

func (x *DuelParticipant) GetTelegramUserId() int64 {
	if x != nil {
		return x.TelegramUserId
	}
	return 0
}

func (x *DuelParticipant) GetUserInfo() *v1.UserDisplayInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *DuelParticipant) GetIsCreator() bool {
	if x != nil {
		return x.IsCreator
	}
	return false
}

func (x *DuelParticipant) GetStakes() []*DuelStakeItem {
	if x != nil {
		return x.Stakes
	}
	return nil
}

func (x *DuelParticipant) GetTotalStakeValue() *v1.TonAmount {
	if x != nil {
		return x.TotalStakeValue
	}
	return nil
}

func (x *DuelParticipant) GetStatus() ParticipantStatus {
	if x != nil {
		return x.Status
	}
	return ParticipantStatus_PARTICIPANT_STATUS_UNSPECIFIED
}

type DuelParticipants struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Creator       *DuelParticipant       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Opponent      *DuelParticipant       `protobuf:"bytes,2,opt,name=opponent,proto3" json:"opponent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelParticipants) Reset() {
	*x = DuelParticipants{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelParticipants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelParticipants) ProtoMessage() {}

func (x *DuelParticipants) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelParticipants.ProtoReflect.Descriptor instead.
func (*DuelParticipants) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{5}
}

func (x *DuelParticipants) GetCreator() *DuelParticipant {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *DuelParticipants) GetOpponent() *DuelParticipant {
	if x != nil {
		return x.Opponent
	}
	return nil
}

type DuelStakeItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GiftId        *v1.GiftId             `protobuf:"bytes,1,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`
	GiftInfo      *v11.GiftView          `protobuf:"bytes,2,opt,name=gift_info,json=giftInfo,proto3" json:"gift_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelStakeItem) Reset() {
	*x = DuelStakeItem{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelStakeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelStakeItem) ProtoMessage() {}

func (x *DuelStakeItem) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelStakeItem.ProtoReflect.Descriptor instead.
func (*DuelStakeItem) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{6}
}

func (x *DuelStakeItem) GetGiftId() *v1.GiftId {
	if x != nil {
		return x.GiftId
	}
	return nil
}

func (x *DuelStakeItem) GetGiftInfo() *v11.GiftView {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

type Duel struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	DuelId       *v1.DuelId             `protobuf:"bytes,1,opt,name=duel_id,json=duelId,proto3" json:"duel_id,omitempty"`
	Params       *DuelParams            `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Participants *DuelParticipants      `protobuf:"bytes,3,opt,name=participants,proto3" json:"participants,omitempty"`
	// Game state
	CurrentRound  int32        `protobuf:"varint,4,opt,name=current_round,json=currentRound,proto3" json:"current_round,omitempty"` // Starts from 1
	RoundsHistory []*RoundInfo `protobuf:"bytes,5,rep,name=rounds_history,json=roundsHistory,proto3" json:"rounds_history,omitempty"`
	WinnerUserId  int64        `protobuf:"varint,6,opt,name=winner_user_id,json=winnerUserId,proto3" json:"winner_user_id,omitempty"`
	// Timing
	NextRollDeadline *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=next_roll_deadline,json=nextRollDeadline,proto3" json:"next_roll_deadline,omitempty"`
	// Total stakes
	TotalStakeValue *v1.TonAmount `protobuf:"bytes,8,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"`
	// Status and timestamps
	Status        GameStatus             `protobuf:"varint,9,opt,name=status,proto3,enum=giftduels.duel.v1.GameStatus" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Duel) Reset() {
	*x = Duel{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Duel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duel) ProtoMessage() {}

func (x *Duel) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duel.ProtoReflect.Descriptor instead.
func (*Duel) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{7}
}

func (x *Duel) GetDuelId() *v1.DuelId {
	if x != nil {
		return x.DuelId
	}
	return nil
}

func (x *Duel) GetParams() *DuelParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Duel) GetParticipants() *DuelParticipants {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Duel) GetCurrentRound() int32 {
	if x != nil {
		return x.CurrentRound
	}
	return 0
}

func (x *Duel) GetRoundsHistory() []*RoundInfo {
	if x != nil {
		return x.RoundsHistory
	}
	return nil
}

func (x *Duel) GetWinnerUserId() int64 {
	if x != nil {
		return x.WinnerUserId
	}
	return 0
}

func (x *Duel) GetNextRollDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRollDeadline
	}
	return nil
}

func (x *Duel) GetTotalStakeValue() *v1.TonAmount {
	if x != nil {
		return x.TotalStakeValue
	}
	return nil
}

func (x *Duel) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *Duel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Duel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Duel) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type DuelSummary struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DuelId            *v1.DuelId             `protobuf:"bytes,1,opt,name=duel_id,json=duelId,proto3" json:"duel_id,omitempty"`
	CurrentRound      int32                  `protobuf:"varint,2,opt,name=current_round,json=currentRound,proto3" json:"current_round,omitempty"`
	CurrentRoundRolls map[string]*DiceRoll   `protobuf:"bytes,3,rep,name=current_round_rolls,json=currentRoundRolls,proto3" json:"current_round_rolls,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Quick access to current round rolls
	WinnerUserId      int64                  `protobuf:"varint,4,opt,name=winner_user_id,json=winnerUserId,proto3" json:"winner_user_id,omitempty"`
	TotalStakeValue   *v1.TonAmount          `protobuf:"bytes,5,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"`
	Participants      *DuelParticipants      `protobuf:"bytes,6,opt,name=participants,proto3" json:"participants,omitempty"`
	NextRollDeadline  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=next_roll_deadline,json=nextRollDeadline,proto3" json:"next_roll_deadline,omitempty"`
	RollTimeout       *durationpb.Duration   `protobuf:"bytes,8,opt,name=roll_timeout,json=rollTimeout,proto3" json:"roll_timeout,omitempty"`
	Status            GameStatus             `protobuf:"varint,9,opt,name=status,proto3,enum=giftduels.duel.v1.GameStatus" json:"status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DuelSummary) Reset() {
	*x = DuelSummary{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelSummary) ProtoMessage() {}

func (x *DuelSummary) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelSummary.ProtoReflect.Descriptor instead.
func (*DuelSummary) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{8}
}

func (x *DuelSummary) GetDuelId() *v1.DuelId {
	if x != nil {
		return x.DuelId
	}
	return nil
}

func (x *DuelSummary) GetCurrentRound() int32 {
	if x != nil {
		return x.CurrentRound
	}
	return 0
}

func (x *DuelSummary) GetCurrentRoundRolls() map[string]*DiceRoll {
	if x != nil {
		return x.CurrentRoundRolls
	}
	return nil
}

func (x *DuelSummary) GetWinnerUserId() int64 {
	if x != nil {
		return x.WinnerUserId
	}
	return 0
}

func (x *DuelSummary) GetTotalStakeValue() *v1.TonAmount {
	if x != nil {
		return x.TotalStakeValue
	}
	return nil
}

func (x *DuelSummary) GetParticipants() *DuelParticipants {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *DuelSummary) GetNextRollDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRollDeadline
	}
	return nil
}

func (x *DuelSummary) GetRollTimeout() *durationpb.Duration {
	if x != nil {
		return x.RollTimeout
	}
	return nil
}

func (x *DuelSummary) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

type DuelListItem struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DuelId          *v1.DuelId             `protobuf:"bytes,1,opt,name=duel_id,json=duelId,proto3" json:"duel_id,omitempty"`
	Status          GameStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=giftduels.duel.v1.GameStatus" json:"status,omitempty"`
	Participants    *DuelParticipants      `protobuf:"bytes,3,opt,name=participants,proto3" json:"participants,omitempty"`
	TotalStakeValue *v1.TonAmount          `protobuf:"bytes,4,opt,name=total_stake_value,json=totalStakeValue,proto3" json:"total_stake_value,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CompletedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	InviteOnly      bool                   `protobuf:"varint,8,opt,name=invite_only,json=inviteOnly,proto3" json:"invite_only,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DuelListItem) Reset() {
	*x = DuelListItem{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelListItem) ProtoMessage() {}

func (x *DuelListItem) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelListItem.ProtoReflect.Descriptor instead.
func (*DuelListItem) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{9}
}

func (x *DuelListItem) GetDuelId() *v1.DuelId {
	if x != nil {
		return x.DuelId
	}
	return nil
}

func (x *DuelListItem) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *DuelListItem) GetParticipants() *DuelParticipants {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *DuelListItem) GetTotalStakeValue() *v1.TonAmount {
	if x != nil {
		return x.TotalStakeValue
	}
	return nil
}

func (x *DuelListItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DuelListItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DuelListItem) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *DuelListItem) GetInviteOnly() bool {
	if x != nil {
		return x.InviteOnly
	}
	return false
}

type DuelFilters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Статус комнаты (open/in-progress/finished/history)
	Status GameStatus `protobuf:"varint,1,opt,name=status,proto3,enum=giftduels.duel.v1.GameStatus" json:"status,omitempty"`
	// Только invite-only комнаты
	InviteOnly bool `protobuf:"varint,3,opt,name=invite_only,json=inviteOnly,proto3" json:"invite_only,omitempty"`
	// Фильтр по создателю или участнику
	IsCreator     bool `protobuf:"varint,4,opt,name=is_creator,json=isCreator,proto3" json:"is_creator,omitempty"`
	IsParticipant bool `protobuf:"varint,5,opt,name=is_participant,json=isParticipant,proto3" json:"is_participant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelFilters) Reset() {
	*x = DuelFilters{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelFilters) ProtoMessage() {}

func (x *DuelFilters) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelFilters.ProtoReflect.Descriptor instead.
func (*DuelFilters) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{10}
}

func (x *DuelFilters) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *DuelFilters) GetInviteOnly() bool {
	if x != nil {
		return x.InviteOnly
	}
	return false
}

func (x *DuelFilters) GetIsCreator() bool {
	if x != nil {
		return x.IsCreator
	}
	return false
}

func (x *DuelFilters) GetIsParticipant() bool {
	if x != nil {
		return x.IsParticipant
	}
	return false
}

type DuelSortOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         DuelSortField          `protobuf:"varint,1,opt,name=field,proto3,enum=giftduels.duel.v1.DuelSortField" json:"field,omitempty"`
	Order         v1.SortOrder           `protobuf:"varint,2,opt,name=order,proto3,enum=giftduels.shared.v1.SortOrder" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelSortOptions) Reset() {
	*x = DuelSortOptions{}
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelSortOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelSortOptions) ProtoMessage() {}

func (x *DuelSortOptions) ProtoReflect() protoreflect.Message {
	mi := &file_giftduels_duel_v1_duel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelSortOptions.ProtoReflect.Descriptor instead.
func (*DuelSortOptions) Descriptor() ([]byte, []int) {
	return file_giftduels_duel_v1_duel_proto_rawDescGZIP(), []int{11}
}

func (x *DuelSortOptions) GetField() DuelSortField {
	if x != nil {
		return x.Field
	}
	return DuelSortField_DUEL_SORT_FIELD_UNSPECIFIED
}

func (x *DuelSortOptions) GetOrder() v1.SortOrder {
	if x != nil {
		return x.Order
	}
	return v1.SortOrder(0)
}

var File_giftduels_duel_v1_duel_proto protoreflect.FileDescriptor

const file_giftduels_duel_v1_duel_proto_rawDesc = "" +
	"\n" +
	"\x1cgiftduels/duel/v1/duel.proto\x12\x11giftduels.duel.v1\x1a\x1cgiftduels/gift/v1/gift.proto\x1a giftduels/shared/v1/common.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x93\x01\n" +
	"\n" +
	"DuelParams\x12\x1f\n" +
	"\vinvite_only\x18\x01 \x01(\bR\n" +
	"inviteOnly\x12E\n" +
	"\x11auto_roll_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0fautoRollTimeout\x12\x1d\n" +
	"\n" +
	"max_rounds\x18\x03 \x01(\rR\tmaxRounds\"z\n" +
	"\x10DuelInviteParams\x12\x1f\n" +
	"\vinvite_only\x18\x01 \x01(\bR\n" +
	"inviteOnly\x12E\n" +
	"\x11auto_roll_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0fautoRollTimeout\"\xc3\x01\n" +
	"\bDiceRoll\x12(\n" +
	"\x10telegram_user_id\x18\x01 \x01(\x03R\x0etelegramUserId\x12!\n" +
	"\fround_number\x18\x02 \x01(\x05R\vroundNumber\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x05R\x05value\x12\x1b\n" +
	"\tis_manual\x18\x04 \x01(\bR\bisManual\x127\n" +
	"\trolled_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\brolledAt\"\xa2\x02\n" +
	"\tRoundInfo\x12!\n" +
	"\fround_number\x18\x01 \x01(\x05R\vroundNumber\x12=\n" +
	"\x05rolls\x18\x02 \x03(\v2'.giftduels.duel.v1.RoundInfo.RollsEntryR\x05rolls\x126\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1e.giftduels.duel.v1.RoundStatusR\x06status\x12$\n" +
	"\x0ewinner_user_id\x18\x04 \x01(\x03R\fwinnerUserId\x1aU\n" +
	"\n" +
	"RollsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.giftduels.duel.v1.DiceRollR\x05value:\x028\x01\"\xe1\x02\n" +
	"\x0fDuelParticipant\x12(\n" +
	"\x10telegram_user_id\x18\x01 \x01(\x03R\x0etelegramUserId\x12A\n" +
	"\tuser_info\x18\x02 \x01(\v2$.giftduels.shared.v1.UserDisplayInfoR\buserInfo\x12\x1d\n" +
	"\n" +
	"is_creator\x18\x03 \x01(\bR\tisCreator\x128\n" +
	"\x06stakes\x18\x04 \x03(\v2 .giftduels.duel.v1.DuelStakeItemR\x06stakes\x12J\n" +
	"\x11total_stake_value\x18\x05 \x01(\v2\x1e.giftduels.shared.v1.TonAmountR\x0ftotalStakeValue\x12<\n" +
	"\x06status\x18\x06 \x01(\x0e2$.giftduels.duel.v1.ParticipantStatusR\x06status\"\x90\x01\n" +
	"\x10DuelParticipants\x12<\n" +
	"\acreator\x18\x01 \x01(\v2\".giftduels.duel.v1.DuelParticipantR\acreator\x12>\n" +
	"\bopponent\x18\x02 \x01(\v2\".giftduels.duel.v1.DuelParticipantR\bopponent\"\x7f\n" +
	"\rDuelStakeItem\x124\n" +
	"\agift_id\x18\x01 \x01(\v2\x1b.giftduels.shared.v1.GiftIdR\x06giftId\x128\n" +
	"\tgift_info\x18\x02 \x01(\v2\x1b.giftduels.gift.v1.GiftViewR\bgiftInfo\"\xce\x05\n" +
	"\x04Duel\x124\n" +
	"\aduel_id\x18\x01 \x01(\v2\x1b.giftduels.shared.v1.DuelIdR\x06duelId\x125\n" +
	"\x06params\x18\x02 \x01(\v2\x1d.giftduels.duel.v1.DuelParamsR\x06params\x12G\n" +
	"\fparticipants\x18\x03 \x01(\v2#.giftduels.duel.v1.DuelParticipantsR\fparticipants\x12#\n" +
	"\rcurrent_round\x18\x04 \x01(\x05R\fcurrentRound\x12C\n" +
	"\x0erounds_history\x18\x05 \x03(\v2\x1c.giftduels.duel.v1.RoundInfoR\rroundsHistory\x12$\n" +
	"\x0ewinner_user_id\x18\x06 \x01(\x03R\fwinnerUserId\x12H\n" +
	"\x12next_roll_deadline\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x10nextRollDeadline\x12J\n" +
	"\x11total_stake_value\x18\b \x01(\v2\x1e.giftduels.shared.v1.TonAmountR\x0ftotalStakeValue\x125\n" +
	"\x06status\x18\t \x01(\x0e2\x1d.giftduels.duel.v1.GameStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12=\n" +
	"\fcompleted_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"\xac\x05\n" +
	"\vDuelSummary\x124\n" +
	"\aduel_id\x18\x01 \x01(\v2\x1b.giftduels.shared.v1.DuelIdR\x06duelId\x12#\n" +
	"\rcurrent_round\x18\x02 \x01(\x05R\fcurrentRound\x12e\n" +
	"\x13current_round_rolls\x18\x03 \x03(\v25.giftduels.duel.v1.DuelSummary.CurrentRoundRollsEntryR\x11currentRoundRolls\x12$\n" +
	"\x0ewinner_user_id\x18\x04 \x01(\x03R\fwinnerUserId\x12J\n" +
	"\x11total_stake_value\x18\x05 \x01(\v2\x1e.giftduels.shared.v1.TonAmountR\x0ftotalStakeValue\x12G\n" +
	"\fparticipants\x18\x06 \x01(\v2#.giftduels.duel.v1.DuelParticipantsR\fparticipants\x12H\n" +
	"\x12next_roll_deadline\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x10nextRollDeadline\x12<\n" +
	"\froll_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\vrollTimeout\x125\n" +
	"\x06status\x18\t \x01(\x0e2\x1d.giftduels.duel.v1.GameStatusR\x06status\x1aa\n" +
	"\x16CurrentRoundRollsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.giftduels.duel.v1.DiceRollR\x05value:\x028\x01\"\xe6\x03\n" +
	"\fDuelListItem\x124\n" +
	"\aduel_id\x18\x01 \x01(\v2\x1b.giftduels.shared.v1.DuelIdR\x06duelId\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.giftduels.duel.v1.GameStatusR\x06status\x12G\n" +
	"\fparticipants\x18\x03 \x01(\v2#.giftduels.duel.v1.DuelParticipantsR\fparticipants\x12J\n" +
	"\x11total_stake_value\x18\x04 \x01(\v2\x1e.giftduels.shared.v1.TonAmountR\x0ftotalStakeValue\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12=\n" +
	"\fcompleted_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vinvite_only\x18\b \x01(\bR\n" +
	"inviteOnly\"\xab\x01\n" +
	"\vDuelFilters\x125\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1d.giftduels.duel.v1.GameStatusR\x06status\x12\x1f\n" +
	"\vinvite_only\x18\x03 \x01(\bR\n" +
	"inviteOnly\x12\x1d\n" +
	"\n" +
	"is_creator\x18\x04 \x01(\bR\tisCreator\x12%\n" +
	"\x0eis_participant\x18\x05 \x01(\bR\risParticipant\"\x7f\n" +
	"\x0fDuelSortOptions\x126\n" +
	"\x05field\x18\x01 \x01(\x0e2 .giftduels.duel.v1.DuelSortFieldR\x05field\x124\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1e.giftduels.shared.v1.SortOrderR\x05order*\x82\x01\n" +
	"\vRoundStatus\x12\x1c\n" +
	"\x18ROUND_STATUS_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eROUND_STATUS_WAITING_FOR_ROLLS\x10\x01\x12\x1a\n" +
	"\x16ROUND_STATUS_COMPLETED\x10\x02\x12\x15\n" +
	"\x11ROUND_STATUS_TIED\x10\x03*\xb8\x01\n" +
	"\x11ParticipantStatus\x12\"\n" +
	"\x1ePARTICIPANT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PARTICIPANT_STATUS_JOINED\x10\x01\x12\x1c\n" +
	"\x18PARTICIPANT_STATUS_READY\x10\x02\x12\x1d\n" +
	"\x19PARTICIPANT_STATUS_ACTIVE\x10\x03\x12#\n" +
	"\x1fPARTICIPANT_STATUS_DISCONNECTED\x10\x04*\x93\x01\n" +
	"\rDuelSortField\x12\x1f\n" +
	"\x1bDUEL_SORT_FIELD_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aDUEL_SORT_FIELD_CREATED_AT\x10\x01\x12\x1f\n" +
	"\x1bDUEL_SORT_FIELD_TOTAL_VALUE\x10\x02\x12 \n" +
	"\x1cDUEL_SORT_FIELD_COMPLETED_AT\x10\x03*\x91\x01\n" +
	"\n" +
	"GameStatus\x12\x1b\n" +
	"\x17GAME_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10GAME_STATUS_OPEN\x10\x01\x12\x1b\n" +
	"\x17GAME_STATUS_IN_PROGRESS\x10\x02\x12\x18\n" +
	"\x14GAME_STATUS_FINISHED\x10\x03\x12\x19\n" +
	"\x15GAME_STATUS_CANCELLED\x10\x04BXZVgithub.com/peterparker2005/giftduels/packages/protobuf-go/gen/giftduels/duel/v1;duelv1b\x06proto3"

var (
	file_giftduels_duel_v1_duel_proto_rawDescOnce sync.Once
	file_giftduels_duel_v1_duel_proto_rawDescData []byte
)

func file_giftduels_duel_v1_duel_proto_rawDescGZIP() []byte {
	file_giftduels_duel_v1_duel_proto_rawDescOnce.Do(func() {
		file_giftduels_duel_v1_duel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_giftduels_duel_v1_duel_proto_rawDesc), len(file_giftduels_duel_v1_duel_proto_rawDesc)))
	})
	return file_giftduels_duel_v1_duel_proto_rawDescData
}

var file_giftduels_duel_v1_duel_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_giftduels_duel_v1_duel_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_giftduels_duel_v1_duel_proto_goTypes = []any{
	(RoundStatus)(0),              // 0: giftduels.duel.v1.RoundStatus
	(ParticipantStatus)(0),        // 1: giftduels.duel.v1.ParticipantStatus
	(DuelSortField)(0),            // 2: giftduels.duel.v1.DuelSortField
	(GameStatus)(0),               // 3: giftduels.duel.v1.GameStatus
	(*DuelParams)(nil),            // 4: giftduels.duel.v1.DuelParams
	(*DuelInviteParams)(nil),      // 5: giftduels.duel.v1.DuelInviteParams
	(*DiceRoll)(nil),              // 6: giftduels.duel.v1.DiceRoll
	(*RoundInfo)(nil),             // 7: giftduels.duel.v1.RoundInfo
	(*DuelParticipant)(nil),       // 8: giftduels.duel.v1.DuelParticipant
	(*DuelParticipants)(nil),      // 9: giftduels.duel.v1.DuelParticipants
	(*DuelStakeItem)(nil),         // 10: giftduels.duel.v1.DuelStakeItem
	(*Duel)(nil),                  // 11: giftduels.duel.v1.Duel
	(*DuelSummary)(nil),           // 12: giftduels.duel.v1.DuelSummary
	(*DuelListItem)(nil),          // 13: giftduels.duel.v1.DuelListItem
	(*DuelFilters)(nil),           // 14: giftduels.duel.v1.DuelFilters
	(*DuelSortOptions)(nil),       // 15: giftduels.duel.v1.DuelSortOptions
	nil,                           // 16: giftduels.duel.v1.RoundInfo.RollsEntry
	nil,                           // 17: giftduels.duel.v1.DuelSummary.CurrentRoundRollsEntry
	(*durationpb.Duration)(nil),   // 18: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
	(*v1.UserDisplayInfo)(nil),    // 20: giftduels.shared.v1.UserDisplayInfo
	(*v1.TonAmount)(nil),          // 21: giftduels.shared.v1.TonAmount
	(*v1.GiftId)(nil),             // 22: giftduels.shared.v1.GiftId
	(*v11.GiftView)(nil),          // 23: giftduels.gift.v1.GiftView
	(*v1.DuelId)(nil),             // 24: giftduels.shared.v1.DuelId
	(v1.SortOrder)(0),             // 25: giftduels.shared.v1.SortOrder
}
var file_giftduels_duel_v1_duel_proto_depIdxs = []int32{
	18, // 0: giftduels.duel.v1.DuelParams.auto_roll_timeout:type_name -> google.protobuf.Duration
	18, // 1: giftduels.duel.v1.DuelInviteParams.auto_roll_timeout:type_name -> google.protobuf.Duration
	19, // 2: giftduels.duel.v1.DiceRoll.rolled_at:type_name -> google.protobuf.Timestamp
	16, // 3: giftduels.duel.v1.RoundInfo.rolls:type_name -> giftduels.duel.v1.RoundInfo.RollsEntry
	0,  // 4: giftduels.duel.v1.RoundInfo.status:type_name -> giftduels.duel.v1.RoundStatus
	20, // 5: giftduels.duel.v1.DuelParticipant.user_info:type_name -> giftduels.shared.v1.UserDisplayInfo
	10, // 6: giftduels.duel.v1.DuelParticipant.stakes:type_name -> giftduels.duel.v1.DuelStakeItem
	21, // 7: giftduels.duel.v1.DuelParticipant.total_stake_value:type_name -> giftduels.shared.v1.TonAmount
	1,  // 8: giftduels.duel.v1.DuelParticipant.status:type_name -> giftduels.duel.v1.ParticipantStatus
	8,  // 9: giftduels.duel.v1.DuelParticipants.creator:type_name -> giftduels.duel.v1.DuelParticipant
	8,  // 10: giftduels.duel.v1.DuelParticipants.opponent:type_name -> giftduels.duel.v1.DuelParticipant
	22, // 11: giftduels.duel.v1.DuelStakeItem.gift_id:type_name -> giftduels.shared.v1.GiftId
	23, // 12: giftduels.duel.v1.DuelStakeItem.gift_info:type_name -> giftduels.gift.v1.GiftView
	24, // 13: giftduels.duel.v1.Duel.duel_id:type_name -> giftduels.shared.v1.DuelId
	4,  // 14: giftduels.duel.v1.Duel.params:type_name -> giftduels.duel.v1.DuelParams
	9,  // 15: giftduels.duel.v1.Duel.participants:type_name -> giftduels.duel.v1.DuelParticipants
	7,  // 16: giftduels.duel.v1.Duel.rounds_history:type_name -> giftduels.duel.v1.RoundInfo
	19, // 17: giftduels.duel.v1.Duel.next_roll_deadline:type_name -> google.protobuf.Timestamp
	21, // 18: giftduels.duel.v1.Duel.total_stake_value:type_name -> giftduels.shared.v1.TonAmount
	3,  // 19: giftduels.duel.v1.Duel.status:type_name -> giftduels.duel.v1.GameStatus
	19, // 20: giftduels.duel.v1.Duel.created_at:type_name -> google.protobuf.Timestamp
	19, // 21: giftduels.duel.v1.Duel.updated_at:type_name -> google.protobuf.Timestamp
	19, // 22: giftduels.duel.v1.Duel.completed_at:type_name -> google.protobuf.Timestamp
	24, // 23: giftduels.duel.v1.DuelSummary.duel_id:type_name -> giftduels.shared.v1.DuelId
	17, // 24: giftduels.duel.v1.DuelSummary.current_round_rolls:type_name -> giftduels.duel.v1.DuelSummary.CurrentRoundRollsEntry
	21, // 25: giftduels.duel.v1.DuelSummary.total_stake_value:type_name -> giftduels.shared.v1.TonAmount
	9,  // 26: giftduels.duel.v1.DuelSummary.participants:type_name -> giftduels.duel.v1.DuelParticipants
	19, // 27: giftduels.duel.v1.DuelSummary.next_roll_deadline:type_name -> google.protobuf.Timestamp
	18, // 28: giftduels.duel.v1.DuelSummary.roll_timeout:type_name -> google.protobuf.Duration
	3,  // 29: giftduels.duel.v1.DuelSummary.status:type_name -> giftduels.duel.v1.GameStatus
	24, // 30: giftduels.duel.v1.DuelListItem.duel_id:type_name -> giftduels.shared.v1.DuelId
	3,  // 31: giftduels.duel.v1.DuelListItem.status:type_name -> giftduels.duel.v1.GameStatus
	9,  // 32: giftduels.duel.v1.DuelListItem.participants:type_name -> giftduels.duel.v1.DuelParticipants
	21, // 33: giftduels.duel.v1.DuelListItem.total_stake_value:type_name -> giftduels.shared.v1.TonAmount
	19, // 34: giftduels.duel.v1.DuelListItem.created_at:type_name -> google.protobuf.Timestamp
	19, // 35: giftduels.duel.v1.DuelListItem.updated_at:type_name -> google.protobuf.Timestamp
	19, // 36: giftduels.duel.v1.DuelListItem.completed_at:type_name -> google.protobuf.Timestamp
	3,  // 37: giftduels.duel.v1.DuelFilters.status:type_name -> giftduels.duel.v1.GameStatus
	2,  // 38: giftduels.duel.v1.DuelSortOptions.field:type_name -> giftduels.duel.v1.DuelSortField
	25, // 39: giftduels.duel.v1.DuelSortOptions.order:type_name -> giftduels.shared.v1.SortOrder
	6,  // 40: giftduels.duel.v1.RoundInfo.RollsEntry.value:type_name -> giftduels.duel.v1.DiceRoll
	6,  // 41: giftduels.duel.v1.DuelSummary.CurrentRoundRollsEntry.value:type_name -> giftduels.duel.v1.DiceRoll
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_giftduels_duel_v1_duel_proto_init() }
func file_giftduels_duel_v1_duel_proto_init() {
	if File_giftduels_duel_v1_duel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_giftduels_duel_v1_duel_proto_rawDesc), len(file_giftduels_duel_v1_duel_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_giftduels_duel_v1_duel_proto_goTypes,
		DependencyIndexes: file_giftduels_duel_v1_duel_proto_depIdxs,
		EnumInfos:         file_giftduels_duel_v1_duel_proto_enumTypes,
		MessageInfos:      file_giftduels_duel_v1_duel_proto_msgTypes,
	}.Build()
	File_giftduels_duel_v1_duel_proto = out.File
	file_giftduels_duel_v1_duel_proto_goTypes = nil
	file_giftduels_duel_v1_duel_proto_depIdxs = nil
}
